plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'org.flywaydb.flyway' version '10.19.0'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
java.sourceCompatibility = '21'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation "org.springframework.boot:spring-boot-starter-thymeleaf"

	implementation platform("io.awspring.cloud:spring-cloud-aws-dependencies:3.2.0")
    implementation platform("software.amazon.awssdk:bom:2.28.22")
	implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3'
    implementation 'software.amazon.awssdk:bedrockagentruntime'
    implementation 'software.amazon.awssdk:netty-nio-client'

	implementation 'com.h2database:h2'
	implementation 'org.flywaydb:flyway-core'

    implementation 'com.amazonaws:aws-lambda-java-core:1.2.3'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

bootRun {
	jvmArgs = ['-Xmx6g']
}

flyway {
	url = "jdbc:h2:file:${System.getProperty('user.dir')}/valhack;AUTO_SERVER=TRUE"
	baselineOnMigrate = true
	baselineVersion = "1"
}

tasks.register('buildLambdaJar', Jar) {
    dependsOn "build", "copyRuntimeDependencies"

    configurations {
        lambdaImplementation {
            extendsFrom configurations.implementation
            exclude group: 'org.springframework.boot'
        }
    }

    from sourceSets.main.output
    dependsOn configurations.lambdaImplementation

    manifest {
        attributes(
                'Main-Class': 'com.peated.valhack.lambda.LambdaHandler'
        )
    }

    archiveBaseName.set('vcth-lambda')
    archiveVersion.set('0.0.1-SNAPSHOT')
    destinationDirectory.set(file("$buildDir/libs"))
}

tasks.register('copyRuntimeDependencies', Copy) {
    from configurations.runtimeClasspath
    into 'build/dependency'
}

tasks.register('buildLambdaDependencyLayer', Zip) {
    dependsOn 'copyRuntimeDependencies'
    into('java/lib') {
        from 'build/dependency'
    }
    archiveFileName.set('vcth-lambda-dependencies.zip')
}

tasks.register('buildLambdaDataLayer', Zip) {
    dependsOn 'copyRuntimeDependencies'
    from('valhack.mv.db')
    archiveFileName.set('vcth-lambda-data.zip')
}

tasks.register('buildLambda', Zip) {
    dependsOn 'buildLambdaJar'
    into('lib') {
        from 'build/libs/vcth-lambda-0.0.1-SNAPSHOT.jar'
    }
    archiveFileName.set('vcth-lambda.zip')
}

tasks.register("packageElasticBeanstalk", Zip) {
    dependsOn "bootJar"
    from("build/libs/vcth-java-0.0.1-SNAPSHOT.jar")
    into(".platform") {
        from(".platform")
    }
    archiveFileName.set("vcth-eb.zip")
}